<project name="famsf-digital-stories" default="build">
    <!-- Run with: vendor/bin/phing -Dbuild.env=vagrant -->
    <!-- For a list of commands, try: vendor/bin/phing -Dbuild.env=vagrant -l -->


    <import file="vendor/palantirnet/the-build/tasks/boilerplate.xml" />


    <!-- Make these commands available by default. -->
    <import file="vendor/palantirnet/the-build/tasks/drupal.xml" />
    <import file="vendor/palantirnet/the-build/tasks/acquia.xml" />


    <!-- Default target: build -->
    <target name="build" description="Build the application.">
        <phingcall target="drupal-build" />

        <property name="styleguide.dir" value="styleguide" />
        <resolvepath propertyName="styleguide.dir.absolute_path" file="${styleguide.dir}" />
        <resolvepath propertyname="styleguide_code" file="${styleguide.dir}/src/content/assets" />

        <exec command="npm run butler -- sass" dir="${styleguide.dir.absolute_path}" logoutput="true" checkreturn="true" />

        <resolvepath propertyname="custom_theme" file="${drupal.root}/themes/custom/famsf_digital_stories_theme" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/css" dest="${custom_theme}/css" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/js" dest="${custom_theme}/js" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/imgs" dest="${custom_theme}/imgs" />
        <includeresource mode="${build.artifact_mode}" source="${styleguide_code}/svg" dest="${custom_theme}/svg" />
    </target>


    <!-- Target: install -->
    <target name="install" description="Install the application.">
        <phingcall target="drupal-install" />
    </target>


    <!-- Target: migrate -->
    <target name="migrate" description="Run the migrations.">
        <echo>Configure this target to load sample data and run the migrations.</echo>
    </target>


    <!-- Target: test -->
    <target name="test" description="Run all the tests.">
        <echo>Configure this target to run the tests.</echo>
        <!-- You may want to include one or more of the commands from the 'code-review' target here. -->
    </target>


    <!-- Target: code-review -->
    <target name="code-review" description="Run the automated code reviews.">
        <!-- These are called directly rather than using <import> because they are single-purpose task files. -->
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/drupal_code_sniffer.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phpmd.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phplint.xml" />
        <phing phingfile="${build.dir}/vendor/palantirnet/the-build/tasks/code_review/phptodo.xml" />
    </target>


    <!-- Target: deploy -->
    <target name="deploy" description="Build the deployment artifact.">
        <phingcall target="check-deploy-env" />

        <if>
            <equals arg1="${build.env}" arg2="pantheon" />
            <then>
                <phingcall target="deploy-pantheon" />
            </then>
            <elseif>
                <equals arg1="${build.env}" arg2="artifact" />
                <then>
                    <phingcall target="deploy-artifact" />
                </then>
            </elseif>
        </if>
    </target>


    <!-- Target: deploy-pantheon -->
    <target name="deploy-pantheon" description="Build the deployment artifact for Pantheon.">
        <phing target="init-repository" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${pantheon.repo.dir}" />
            <property name="repo.source" value="${pantheon.repo.source}" />
        </phing>

        <phing target="init-branch" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${pantheon.repo.dir}" />
            <property name="repo.branch" value="${pantheon.repo.branch}" />
        </phing>

        <phing target="run-composer-elsewhere" phingfile="vendor/palantirnet/the-build/tasks/lib/artifacts.xml" inheritAll="false" dir=".">
            <property name="install_dir" value="${pantheon.repo.dir}" />
            <property name="build.dir" value="${build.dir}" />
            <property name="drupal.root" value="${pantheon.repo.dir}" />
            <property name="drupal.sites_subdir" value="${drupal.sites_subdir}" />

            <property name="drupal.root_name" value="" />
            <property name="install_conf_dir" value="${install_dir}/private" />
        </phing>

        <phingcall target="build" />

        <!-- Drupal's autoload.php needs to reference a different location for the vendor directory -->
        <copy file="${build.dir}/conf/drupal/autoload.pantheon.php" tofile="${pantheon.repo.dir}/autoload.php" overwrite="true" />

        <phing target="commit" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="build.dir" value="${build.dir}" />
            <property name="repo.dir" value="${pantheon.repo.dir}" />
            <property name="tag_prefix" value="${pantheon.repo.tag_prefix}" />
            <property name="message" value="Drupal artifact." />
        </phing>

        <phing target="push" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${pantheon.repo.dir}" />
            <property name="repo.branch" value="${pantheon.repo.branch}" />
        </phing>
    </target>


    <!-- Target: deploy-artifact -->
    <target name="deploy-artifact" description="Build the deployment artifact for a generic host.">
        <phing target="init-repository" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${artifact.dir}" />
            <property name="repo.source" value="${artifact.repo}" />
        </phing>

        <phing target="init-branch" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${artifact.dir}" />
            <property name="repo.branch" value="${artifact.branch}" />
        </phing>

        <phing target="run-composer-elsewhere" phingfile="vendor/palantirnet/the-build/tasks/lib/artifacts.xml" inheritAll="false" dir=".">
            <property name="install_dir" value="${artifact.dir}" />
            <property name="build.dir" value="${build.dir}" />
            <property name="drupal.root" value="${drupal.root}" />
            <property name="drupal.sites_subdir" value="${drupal.sites_subdir}" />
            <property name="drupal.root_name" value="web/" />
        </phing>

        <phingcall target="build" />

        <phing target="commit" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="build.dir" value="${build.dir}" />
            <property name="repo.dir" value="${artifact.dir}" />
            <property name="tag_prefix" value="${artifact.tag_prefix}" />
            <property name="message" value="Drupal artifact." />
        </phing>

        <phing target="push" phingfile="vendor/palantirnet/the-build/tasks/lib/repositories.xml" inheritAll="false" dir=".">
            <property name="repo.dir" value="${artifact.dir}" />
            <property name="repo.branch" value="${artifact.branch}" />
        </phing>
    </target>


</project>
