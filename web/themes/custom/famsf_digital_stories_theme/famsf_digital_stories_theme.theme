<?php

/**
 * @file
 * Functions to support styling in the FAMSF Digital Stories theme.
 */
function famsf_digital_stories_theme_preprocess_node(&$variables) {
    //field_theme
    // Find out what type of entity we have.
    $route = explode('.', Drupal::routeMatch()->getRouteName());
    // Get the hero from the entity if it exists.
    /** @var  Drupal\node\Entity\Node $entity */
    $entity = \Drupal::routeMatch()->getParameter($route[1]);
    if (NULL !== $entity
        && method_exists($entity, 'hasField')
        && $entity->hasField('field_theme')
        && NULL !== $entity->get('field_theme')->first()
    ) {
        $library = $entity->get('field_theme')->first();
        $variables['#attached']['library'][] = 'famsf_digital_stories_theme/' . $library->value;
    }
}
/**
 * Implements hook_theme_suggestions_page_alter().
 */
function famsf_digital_stories_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
        $content_type = $node->bundle();
        $suggestions[] = 'page__' . $content_type;
    }
}

/**
 * Implements template_preprocess_html().
 */
function famsf_digital_stories_theme_preprocess_html(&$variables) {
    //field_theme
    // Find out what type of entity we have.
    $route = explode('.', Drupal::routeMatch()->getRouteName());
    // Get the hero from the entity if it exists.
    /** @var  Drupal\node\Entity\Node $entity */
    $entity = \Drupal::routeMatch()->getParameter($route[1]);
    if (NULL !== $entity
        && method_exists($entity, 'hasField')
        && $entity->hasField('field_addthis_code')
        && NULL !== $entity->get('field_addthis_code')->first()
    ) {
        $addThis = $entity->get('field_addthis_code')->first();
        $variables['addThis']  = $addThis->value;
    }
}

function famsf_digital_stories_theme_preprocess_field(&$variables) {
    $element = $variables['element'];
    if (isset($element['#field_name'])){
        $elementName = $element['#field_name'];
    }
    if ($elementName == 'field_link' && $element['#bundle'] == 'link_or_download_button') {
        /** @var Drupal\paragraphs\Entity\Paragraph $paragraph */
        $paragraph = $element['#object'];
        if (NULL !== $paragraph
            && method_exists($paragraph, 'hasField')
            && $paragraph->hasField('field_button_style')
            && NULL !== $paragraph->get('field_button_style')->first()
        ) {
            $variables['items'][0]['content']['#options']['attributes']['class'][] = $paragraph->get('field_button_style')->first()->value;
        }
    }
}