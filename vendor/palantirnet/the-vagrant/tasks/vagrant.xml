<?xml version="1.0"?>
<project name="Vagrant" default="install">
    <!--
        This can be used to install our current vagrant machine and provisioning
        in a project.
      -->

    <basename property="default.projectname" file="${application.startdir}" suffix="local" />


    <!-- Target: install -->
    <target name="install" description="Install the vagrantfile and provisioning into your project.">
        <propertyprompt propertyName="projectname" defaultValue="${default.projectname}" promptText="Enter a short name for your project" promptCharacter=":" useExistingValue="true"/>
        <input propertyName="copy" message="Copy Ansible roles into your project for customization" promptChar="?" validArgs="Y,n" />

        <property name="vagrant.installdir" value="${application.startdir}"/>
        <property name="vagrant.ansible.source" value="${phing.dir.vagrant}/../conf/vagrant/provisioning"/>
        <property name="vagrant.vagrantfile.source" value="${phing.dir.vagrant}/../conf/vagrant/Vagrantfile"/>
        <property name="vagrant.vagrantfile.dest" value="${vagrant.installdir}/Vagrantfile"/>

        <if>
            <equals arg1="${copy}" arg2="Y"/>
            <then>
                <!-- Provision from copies of the playbooks from the-vagrant -->
                <property name="vagrant.ansible.playbook" value="provisioning/${projectname}.yml"/>
                <copy todir="${vagrant.installdir}/provisioning">
                    <fileset dir="${vagrant.ansible.source}"/>
                </copy>
                <move file="${vagrant.installdir}/provisioning/drupal8-skeleton.yml" tofile="${vagrant.installdir}/provisioning/${projectname}.yml"/>
            </then>
            <else>
                <!-- Provision directly from the-vagrant playbooks -->
                <property name="vagrant.ansible.playbook" value="vendor/palantirnet/the-vagrant/conf/vagrant/provisioning/drupal8-skeleton.yml"/>
            </else>
        </if>

        <copy file="${vagrant.vagrantfile.source}" tofile="${vagrant.vagrantfile.dest}" overwrite="true">
            <filterchain>
                <replacetokens>
                    <token key="projectname" value="${projectname}"/>
                    <token key="playbook" value="${vagrant.ansible.playbook}"/>
                </replacetokens>
            </filterchain>
        </copy>
    </target>


    <target name="remove" description="Remove the vagrantfile and provisioning from your project.">
        <propertyprompt propertyName="delete" promptText="Are you sure you want to delete the Vagrantfile and any local provisioning? You may want to `vagrant destroy` first." promptCharacter="y/N :" useExistingValue="true"/>

        <property name="vagrant.installdir" value="${application.startdir}"/>

        <if>
            <equals arg1="${delete}" arg2="y"/>
            <then>
                <delete file="${vagrant.installdir}/Vagrantfile"/>
                <delete dir="${vagrant.installdir}/provisioning"/>
            </then>
            <else>
                <echo>Ok, nevermind.</echo>
            </else>
        </if>
    </target>

</project>
