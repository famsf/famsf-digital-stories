/**
 * @file
 * Define your custom Sass mixins and extends here.
 * @see http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin
 */

/* ==========================================================================
   Typography grooming extends
   ========================================================================== */

/* Tight tracking */
%track-in {
  letter-spacing: -.0125em;
}

/* Open tracking */
%track-out {
  letter-spacing: .1em;
}

/* Style larger text with a tighter tracking, change weight, etc.  */
%display-type {
  @extend %track-in;
}

/* Style all caps with a slightly open tracking. */
%allcaps {
  @extend %track-out;
  text-transform: uppercase;
}

/* Unstyle a list */
%list--simple {
  margin: 0;
  padding: 0;
  list-style: none;
}


/* ==========================================================================
   Clearfix extend
   ========================================================================== */

/**
 * Applies a clearfix ruleset using a placeholder selector. Placeholder selectors
 * do not get compiled uless they are called - removing the nesting issues that
 * can otherwise occur with extends.
 */

.clearfix,
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


/* ==============================================================
   Visually hidden extend
   ============================================================== */

/**
 * Element-invisible as defined by snook.ca
 * @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.element-invisible,
%element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if support-legacy-browser(ie, '7') {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

/* Turns off the element-invisible effect. */
%element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

/*  Hides text only on an element while maintaining accessibility,
typically for image replacement:
http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/ */
%text-hidden,
.text-hidden {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

.element-focusable,
%element-focusable {
  @extend %element-invisible;

  &:active,
  &:focus {
    @extend %element-invisible-off;
  }
}

/* ==============================================================
   CSS3 transition mixin
   ============================================================== */

@mixin trans($property: all, $timing: .3s, $easing: ease) {
  transition: $property $timing $easing;
}

/* ==============================================================
   Rectangles background extend
   ============================================================== */

.rectangles-bg,
%rectangles-bg {

  @include breakpoint($bp3) {
    border: 40px solid transparent;
    border-image-source: $rectangles-border;
    border-image-slice: 25%;
    border-image-repeat: repeat;
  }
}

/* ==============================================================
   Custom focus state extend
   ============================================================== */

%custom-focus {
  &:focus {
    outline: none;
    background-color: darken($background-b, 7%);
  }
}

// Scroll lock for preventing background scrolling on the body when a modal opens

.scroll-lock {
  overflow: hidden;
}

/* ==============================================================
   Dotted border extend
   ============================================================== */

%dotted-border {
  border-bottom: 8px solid transparent;
  border-image-source: $dotted-border;
  border-image-slice: 26%;
  border-image-repeat: round;
}

/* ==============================================================
   Hero extends
   ============================================================== */

%hero {
  width: 100%;
  display: flex;
  background-size: cover;
  background-position: center;
}

%hero__content {
  margin: auto;
  position: relative;
  width: 90vw;
  color: $midnight;
  padding: rhythm(1);
  background-color: $white-60;

  @include breakpoint($bp1) {
    width: 27rem;
  }

  &.top-left {
    @include breakpoint($bp1) {
      margin-top: rhythm(3);
      margin-left: rhythm(3);
    }
  }

  &.top-right {
    @include breakpoint($bp1) {
      margin-top: rhythm(3);
      margin-right: rhythm(3);
    }
  }

  &.bottom-left {
    @include breakpoint($bp1) {
      margin-bottom: rhythm(3);
      margin-left: rhythm(3);
    }
  }

  &.bottom-right {
    @include breakpoint($bp1) {
      margin-bottom: rhythm(3);
      margin-right: rhythm(3);
    }
  }

  &.has-outlined-rectangles {
    @include breakpoint($bp1) {
      background-color: $white-30;
    }
  }

  &.has-solid-rectangles {
    @include breakpoint($bp1) {
      background-color: transparent;
    }
  }

  &.has-dotted-border {
    h1 {
      @extend %dotted-border;
      padding-bottom: .5em;
    }
  }
}

%hero__rectangle {
  display: none;

  @include breakpoint($bp1) {
    display: block;
    position: absolute;
    z-index: 0;
    // the width and height of the rectangles should be .7rem more than the width and height of .section-hero--title to create overlap effect
    width: 27rem + .7rem;
    height: 8.7rem + .7rem;

    &.top {
      top: -.7rem;
      left: -.7rem;
    }

    &.bottom {
      bottom: -.7rem;
      right: -.7rem;
    }

    .has-outlined-rectangles & {
      border: 2px solid transparentize($azure, .7);
    }

    .has-solid-rectangles & {
      background-color: $white-60;
    }
  }
}
